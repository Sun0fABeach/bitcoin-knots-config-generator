{
  "__internal": {
    "platform": {
      "name": "Platform",
      "description": {
        "Windows": "Config for Windows",
        "Linux": "Config for Linux",
        "Mac OS": "Config for Mac OS"
      },
      "default": null,
      "values": ["Windows", "Linux", "Mac OS"]
    }
  },
  "chain": {
    "section": "Chain Selection",
    "description": "Choose which network / blockchain to use.",
    "chain": {
      "name": "Chain",
      "description": {
        "main": "Main Network",
        "test": "Test Network",
        "signet": "Signature Network",
        "regtest": "Regression Test Network"
      },
      "values": [
        "Mainnet [main]",
        "Testnet [test]",
        "Signet [signet]",
        "Regtest [regtest]"
      ],
      "default": "main"
    },
    "testnet": {
      "name": "Testnet",
      "description": "Run this node on the Bitcoin Test Network. Equivalent to -chain=test",
      "default": 0
    },
    "regtest": {
      "name": "Regtest",
      "shortDescription": "Run this node on its own independent test network. Equivalent to -chain=regtest.",
      "description": "Enter regression test mode, which uses a special chain in which blocks can be solved instantly. This is intended for regression testing tools and app development. Equivalent to -chain=regtest.",
      "default": 0
    },
    "signet": {
      "name": "Signet",
      "description": "Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter",
      "default": 0
    },
    "signetchallenge": {
      "name": "Signet Challenge",
      "shortDescription": "Blocks must satisfy the given script to be considered valid (only for signet networks).",
      "description": "Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge).",
      "default": ""
    },
    "signetblocktime": {
      "name": "Signet Blocktime",
      "shortDescription": "Difficulty adjustment will target a block time of the given amount in seconds (must have -signetchallenge set).",
      "description": "Difficulty adjustmnt will target a block time of the given amount in seconds (only for custom signet networks, must have -signetchallenge set; defaults to 10 minutes).",
      "knotsExclusive": true,
      "default": 600
    },
    "signetseednode": {
      "name": "Signet Seed Node",
      "shortDescription": "Specify a seed node for the signet network, in the hostname[:port] format, e.g. sig.net:1234 (may be used multiple times to specify multiple seed nodes).",
      "description": "Specify a seed node for the signet network, in the hostname[:port] format, e.g. sig.net:1234 (may be used multiple times to specify multiple seed nodes; defaults to the global default signet test network seed node(s)).",
      "default": ""
    },
    "vbparams": {
      "name": "Version Bits Deployment Params",
      "description": "Use given start/end times for specified version bits deployment. Regtest mode only, in format <deployment:start:end[:min_activation_height]>. Can be set multiple times.",
      "default": ""
    }
  },
  "core": {
    "section": "Bitcoin Knots",
    "description": "Basic parameters regarding Bitcoin Knots node operation.",
    "alertnotify": {
      "name": "Alert Notification",
      "description": "Execute command when an alert (or long fork) is received (%s in cmd is replaced by message)",
      "default": ""
    },
    "blockfilterindex": {
      "name": "Block Filter Index",
      "description": {
        "0": "Disable compact filters",
        "1": "Certain indexes are enabled (currently just basic)",
        "v0": "v0",
        "basic": "Basic filters"
      },
      "default": "0",
      "values": [
        "Disable [0]",
        "Enable All [1]",
        "v0 [v0]",
        "Basic Filters [basic]"
      ]
    },
    "blocknotify": {
      "name": "Block Notification",
      "description": "Execute command when the best block changes (%s in cmd is replaced by block hash)",
      "default": ""
    },
    "blocksdir": {
      "name": "Block Data Storage Location",
      "description": "Specify a non-default location to store blockchain data.",
      "default": "$BASE/blocks"
    },
    "blocksonly": {
      "name": "Blocks Only Mode",
      "shortDescription": "Only download and relay blocks - ignore unconfirmed transactions.",
      "description": "Whether to reject unconfirmed transactions from network peers. Disables automatic broadcast and rebroadcast of transactions, unless the source peer has the 'forcerelay' permission. RPC transactions are not affected.",
      "default": 0
    },
    "assumevalid": {
      "name": "Assume Valid Chain History",
      "shortDescription": "If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification.",
      "description": "If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (performance boost during initial sync). Set to 0 to verify all blocks.\ndefault:\n0000000000000000000101209b4ab3570862dc3fac8633eb62938a541c55a2ff\ntestnet:\n0000000000000093bcb68c03a9a168ae252572d348a2eaeba2cdf9231d73206f\nsignet:\n0000013d778ba3f914530f11f6b69869c9fab54acff85acd7b8201d111f19b7f.",
      "default": ""
    },
    "coinstatsindex": {
      "name": "Coin Stats Index",
      "description": "Maintain coinstats index used by the gettxoutsetinfo RPC.",
      "default": 0
    },
    "daemon": {
      "name": "Daemon Mode",
      "description": "Run in the background as a daemon and accept commands.",
      "default": 0
    },
    "daemonwait": {
      "name": "Daemon Wait Mode",
      "description": "Wait for initialization to be finished before exiting. This implies -daemon.",
      "default": 0
    },
    "datadir": {
      "name": "Data Storage Location",
      "description": "Specify a non-default location to store blockchain and other data.",
      "default": "$BASE"
    },
    "dbbatchsize": {
      "name": "DB Batch Size",
      "description": "Maximum database write batch size in bytes.",
      "default": 16777216,
      "min": 1024
    },
    "dbcache": {
      "name": "DB Cache Size",
      "shortDescription": "Set database cache size in MiB (4 to 1048576).",
      "description": "Set database cache size in MiB (4 to 1048576). Machines sync faster with a larger cache. In addition, unused mempool memory is shared for this cache (see -maxmempool).",
      "default": 450,
      "min": 4,
      "max": 1048576
    },
    "dbfilesize": {
      "name": "DB File Size",
      "description": "Target size of files within databases, in MiB.",
      "knotsExclusive": true,
      "default": 128,
      "min": 1,
      "max": 1024
    },
    "lowmem": {
      "name": "Low Memory",
      "description": "If system available memory falls below <n> MiB, flush caches.",
      "knotsExclusive": true,
      "default": "10"
    },
    "confrw": {
      "name": "Include Read/Write Config File",
      "description": "Specify path to read/write configuration file. Relative paths will be prefixed by the network-specific datadir location.",
      "knotsExclusive": true,
      "default": "bitcoin_rw.conf"
    },
    "includeconf": {
      "name": "Include Additional Config File",
      "description": "Load additional configuration file, relative to the datadir path.",
      "default": ""
    },
    "allowignoredconf": {
      "name": "Allow Ignored Config File",
      "description": "For backwards compatibility, treat an unused bitcoin.conf file in the datadir as a warning, not an error.",
      "default": 0
    },
    "loadblock": {
      "name": "Import Blocks From File",
      "description": "Imports blocks from external blk000??.dat file on startup. This option can be set multiple times with different file values.",
      "default": ""
    },
    "maxorphantx": {
      "name": "Max Orphan Transactions",
      "description": "Keep at most <n> unconnectable transactions in memory.",
      "default": 100,
      "min": 0
    },
    "maxmempool": {
      "name": "Max Mempool Size",
      "description": "Keep the transaction memory pool below <n> megabytes.",
      "default": 300
    },
    "mempoolexpiry": {
      "name": "Mempool Expiration",
      "description": "Do not keep transactions in the mempool longer than <n> hours.",
      "default": 336,
      "min": 1
    },
    "minimumchainwork": {
      "name": "Minimum Chain Work",
      "shortDescription": "Minimum work assumed to exist on a valid chain in hex.",
      "description": "Minimum work assumed to exist on a valid chain in hex.\ndefault:\n0000000000000000000000000000000000000000792b48315ca0b9035b965b8c\ntestnet:\n000000000000000000000000000000000000000000000b6a51f415a67c0da307\nsignet:\n000000000000000000000000000000000000000000000000000001ad46be4862",
      "default": "0000000000000000000000000000000000000000792b48315ca0b9035b965b8c"
    },
    "persistmempool": {
      "name": "Persist Mempool",
      "description": "Save the mempool on shutdown and load on restart.",
      "default": 1
    },
    "blockreconstructionextratxn": {
      "name": "Block Reconstruction Transactions",
      "description": "Extra transactions to keep in memory for compact block reconstructions.",
      "default": 100
    },
    "par": {
      "name": "Script Verification Parallelization",
      "description": "Set the number of script verification threads. (1 up to 15, 0 = automatic, less than 0 = leave that many cores free).",
      "default": 0
    },
    "pid": {
      "name": "PID file",
      "description": "Specify process ID file name. Relative paths will be prefixed by a net-specific datadir location.",
      "default": "bitcoind.pid"
    },
    "prune": {
      "name": "Prune Old Blocks",
      "shortDescription": "Reduce storage requirements by enabling pruning (deleting) of old blocks.",
      "description": "Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -coinstatsindex. WARNING: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, greater than 550 = automatically prune blocks to stay under target size in MiB).",
      "default": 0,
      "min": 0
    },
    "reindex-chainstate": {
      "name": "Reindex Chainstate",
      "shortDescription": "Reindex chain state from the currently indexed blocks.",
      "description": "Reindex chain state from the currently indexed blocks. WARNING: very slow!",
      "default": 0
    },
    "reindex": {
      "name": "Reindex",
      "shortDescription": "Rebuild chain state and block index from the blk*.dat files on disk.",
      "description": "Rebuild chain state and block index from the blk*.dat files on disk. If an assumeutxo snapshot was loaded, its chainstate will be wiped as well. The snapshot can then be reloaded via RPC. WARNING: very slow!",
      "default": 0
    },
    "settings": {
      "name": "Settings Data File",
      "description": "Specify path to dynamic settings data file. Can be disabled with -nosettings. File is written at runtime and not meant to be edited by users (use bitcoin.conf instead for custom settings). Relative paths will be prefixed by datadir location.",
      "default": "settings.json"
    },
    "shutdownnotify": {
      "name": "Shutdown Notification",
      "shortDescription": "Execute command immediately before beginning shutdown.",
      "description": "Execute command immediately before beginning shutdown. The need for shutdown may be urgent, so be careful not to delay it long (if the command doesn't require interaction with the server, consider having it fork into the background).",
      "default": ""
    },
    "softwareexpiry": {
      "name": "Software Expiry",
      "description": "Stop working after this POSIX timestamp.",
      "knotsExclusive": true,
      "default": "1767251360"
    },
    "startupnotify": {
      "name": "Startup Notification",
      "description": "Execute command on startup.",
      "default": ""
    },
    "txindex": {
      "name": "Index Transactions",
      "description": "Maintain a full transaction index, used by the getrawtransaction rpc call.",
      "default": 0
    }
  },
  "debug": {
    "section": "Debugging & Testing",
    "description": "Features that help developers who are testing changes to Bitcoin Knots.",
    "uacomment": {
      "name": "User Agent Comment",
      "description": "Append comment to the user agent string.",
      "default": ""
    },
    "acceptstalefeeestimates": {
      "name": "Accept Stale Fee Estimates",
      "shortDescription": "Read fee estimates even if they are over 60 hours old. Regtest only.",
      "description": "Read fee estimates even if they are stale (regtest only) fee estimates are considered stale if they are 60 hours old.",
      "default": 0
    },
    "addrmantest": {
      "name": "Address Manager Test",
      "description": "Allows you to test address relay on localhost.",
      "default": 0
    },
    "capturemessages": {
      "name": "Capture Messages",
      "description": "Capture all P2P messages to disk.",
      "default": 0
    },
    "checkblockindex": {
      "name": "Check Block Index",
      "description": "Do a consistency check for the block tree, chainstate, and other validation data structures occasionally (default: 0, regtest: 1).",
      "default": 0
    },
    "checkblocks": {
      "name": "Check Blocks",
      "shortDescription": "How many recent blocks to check at startup (0 == check all blocks).",
      "description": "How many recent blocks to check at startup. (0 == check all blocks which is very slow!)",
      "default": 6,
      "min": 0
    },
    "checklevel": {
      "name": "Check Block Level",
      "shortDescription": "How thorough the block verification of -checkblocks is (0-4).",
      "description": "How thorough the block verification of -checkblocks is: level 0 reads the blocks from disk, level 1 verifies block validity, level 2 verifies undo data, level 3 checks disconnection of tip blocks, level 4 tries to reconnect the blocks, each level includes the checks of the previous levels.",
      "default": 3,
      "min": 0,
      "max": 4
    },
    "checkaddrman": {
      "name": "Check Address Manager",
      "description": "Run addrman consistency checks every <n> operations.",
      "default": 0,
      "min": 0
    },
    "checkmempool": {
      "name": "Check Mempool",
      "description": "Run mempool consistency checks every <n> transactions. Use 0 to disable (default: 0, regtest: 1).",
      "default": 0,
      "min": 0
    },
    "checkpoints": {
      "name": "Enable Checkpoints",
      "description": "Enable rejection of any forks from the known historical chain until block 843264.",
      "default": 1
    },
    "dbcrashratio": {
      "name": "DB Crash Ratio",
      "description": "Randomly crash while writing data at a given rate between 0 and 1.",
      "default": 0,
      "min": 0,
      "max": 1
    },
    "fastprune": {
      "name": "Fast Prune",
      "description": "Use smaller block files and lower minimum prune height for testing purposes.",
      "default": 0
    },
    "stopafterblockimport": {
      "name": "Stop After Block Import",
      "description": "Stop running after importing blocks from disk.",
      "default": 0
    },
    "stopatheight": {
      "name": "Stop At Height",
      "description": "Stop running after reaching the given height in the main chain.",
      "default": 0
    },
    "testactivationheight": {
      "name": "Test Activation Height",
      "description": "Set the activation height of of 'name' (segwit, bip34, dersig, cltv, csv) via 'name@height' (regtest-only).",
      "default": 0
    },
    "limitancestorcount": {
      "name": "Limit Transaction Ancestor Count",
      "description": "Do not accept transactions if number of in-mempool ancestors is <n> or more.",
      "default": 25,
      "min": 0
    },
    "limitancestorsize": {
      "name": "Limit Transaction Ancestor Size",
      "description": "Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes.",
      "default": 101,
      "min": 0
    },
    "limitdescendantcount": {
      "name": "Limit Transaction Descendant Count",
      "description": "Do not accept transactions if any ancestor would have <n> or more in-mempool descendants.",
      "default": 25,
      "min": 0
    },
    "limitdescendantsize": {
      "name": "Limit Transaction Descendant Size",
      "description": "Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants.",
      "default": 101,
      "min": 0
    },
    "debug": {
      "name": "Debug Logging",
      "description": {
        "0": "Disable debug logging.",
        "1": "Enable debug logging for all categories.",
        "addrman": "Enable address manager logging.",
        "bench": "Enable benchmark logging",
        "blockstorage": "Enable block storage logging",
        "cmpctblock": "Enable compact block logging",
        "coindb": "Enable coin database logging",
        "estimatefee": "Enable fee estimation logging",
        "http": "Enable HTTP logging",
        "i2p": "Enable I2P logging",
        "ipc": "Enable IPC logging",
        "leveldb": "Enable leveldb logging",
        "libevent": "Enable libevent logging",
        "mempool": "Enable mempool logging",
        "mempoolrej": "Enable mempool rejection logging",
        "net": "Enable network logging",
        "proxy": "Enable proxy logging",
        "prune": "Enable pruning logging",
        "qt": "Enable QT logging",
        "rand": "Enable randomness logging",
        "reindex": "Enable reindexing logging",
        "rpc": "Enable RPC logging",
        "scan": "Enable scan logging",
        "selectcoins": "Enable coin selection logging",
        "tor": "Enable Tor logging",
        "txpackages": "Enable transaction packages logging",
        "txreconciliation": "Enable transaction reconciliation logging",
        "util": "Enable utility logging",
        "validation": "Enable transaction validation logging",
        "walletdb": "Enable wallet database logging",
        "zmq": "Enable ZeroMQ logging"
      },
      "values": [
        "Disable [0]",
        "Enable All [1]",
        "Address Manager [addrman]",
        "Benchmarking [bench]",
        "Block Storage [blockstorage]",
        "Compact Blocks [cmpctblock]",
        "CoinDB [coindb]",
        "Fee Estimation [estimatefee]",
        "Database [db]",
        "HTTP [http]",
        "I2P [i2p]",
        "IPC [ipc]",
        "LevelDB [leveldb]",
        "LibEvent [libevent]",
        "Mempool [mempool]",
        "Mempool Rejection [mempoolrej]",
        "Networking [net]",
        "Proxy [proxy]",
        "Pruning [prune]",
        "QT [qt]",
        "Random [rand]",
        "Reinding [reindex]",
        "RPC [rpc]",
        "Scan [scan]",
        "Coin Selection [selectcoins]",
        "Tor [tor]",
        "TX Packages [txpackages]",
        "TX Reconciliation [txreconciliation]",
        "Utility [util]",
        "TX Validation [validation]",
        "Wallet DB [walletdb]",
        "ZeroMQ [zmq]"
      ],
      "default": "0"
    },
    "debugexclude": {
      "name": "Exclude Debug Logging",
      "description": {
        "0": "Don't exclude any logging.",
        "addrman": "Exclude address manager logging.",
        "bench": "Exclude benchmark logging",
        "blockstorage": "Exclude block storage logging",
        "cmpctblock": "Exclude compact block logging",
        "coindb": "Exclude coin database logging",
        "estimatefee": "Exclude fee estimation logging",
        "http": "Exclude HTTP logging",
        "i2p": "Exclude I2P logging",
        "ipc": "Exclude IPC logging",
        "leveldb": "Exclude leveldb logging",
        "libevent": "Exclude libevent logging",
        "mempool": "Exclude mempool logging",
        "mempoolrej": "Exclude mempool rejection logging",
        "net": "Exclude network logging",
        "proxy": "Exclude proxy logging",
        "prune": "Exclude pruning logging",
        "qt": "Exclude QT logging",
        "rand": "Exclude randomness logging",
        "reindex": "Exclude reindexing logging",
        "rpc": "Exclude RPC logging",
        "scan": "Exclude scan logging",
        "selectcoins": "Exclude coin selection logging",
        "tor": "Exclude Tor logging",
        "txpackages": "Exclude transaction packages logging",
        "txreconciliation": "Exclude transaction reconciliation logging",
        "util": "Exclude utility logging",
        "validation": "Exclude transaction validation logging",
        "walletdb": "Exclude wallet database logging",
        "zmq": "Exclude ZeroMQ logging"
      },
      "values": [
        "No Exclusions [0]",
        "Address Manager [addrman]",
        "Benchmarking [bench]",
        "Block Storage [blockstorage]",
        "Compact Blocks [cmpctblock]",
        "CoinDB [coindb]",
        "Fee Estimation [estimatefee]",
        "Database [db]",
        "HTTP [http]",
        "I2P [i2p]",
        "IPC [ipc]",
        "LevelDB [leveldb]",
        "LibEvent [libevent]",
        "Mempool [mempool]",
        "Mempool Rejection [mempoolrej]",
        "Networking [net]",
        "Proxy [proxy]",
        "Pruning [prune]",
        "QT [qt]",
        "Random [rand]",
        "Reinding [reindex]",
        "RPC [rpc]",
        "Scan [scan]",
        "Coin Selection [selectcoins]",
        "Tor [tor]",
        "TX Packages [txpackages]",
        "TX Reconciliation [txreconciliation]",
        "Utility [util]",
        "TX Validation [validation]",
        "Wallet DB [walletdb]",
        "ZeroMQ [zmq]"
      ],
      "default": "0"
    },
    "debuglogfile": {
      "name": "Debug Log File",
      "description": "Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. Pass -nodebuglogfile to disable writing the log to a file.",
      "default": "$BASE/debug.log"
    },
    "logips": {
      "name": "Log IP Addresses",
      "description": "Include IP addresses in debug output.",
      "default": 0
    },
    "loglevel": {
      "name": "Log Level",
      "shortDescription": "Set the global or per-category severity level for logging in the format of either <level> or <category>:<level>. Level values may be: info, debug, or trace. Format <category>:<level> may be specified multiple times.",
      "description": "Set the global or per-category severity level for logging in the format of either <level> or <category>:<level>. Level values may be: info, debug, or trace. Warning and error levels are always logged. If <category>:<level> is supplied, the setting will override the global one and may be specified multiple times. See 'debug' config for allowed category values.",
      "default": ""
    },
    "logsourcelocations": {
      "name": "Log Source Locations",
      "description": "Prepend debug output with name of the originating source location (source file, line number and function name).",
      "default": 0
    },
    "logthreadnames": {
      "name": "Log Thread Names",
      "description": "Prepend debug output with name of the originating thread (only available on platforms supporting thread_local).",
      "default": 0
    },
    "logtimestamps": {
      "name": "Log Timestamps",
      "description": "Prepend debug output with timestamp.",
      "default": 1
    },
    "logtimemicros": {
      "name": "Log Precise Timestamps",
      "description": "Add microsecond precision to debug timestamps.",
      "default": 0
    },
    "mocktime": {
      "name": "Mock Timestamps",
      "description": "Replace actual time with <n> seconds since epoch.",
      "default": 0
    },
    "maxsigcachesize": {
      "name": "Max Signature Cache Size",
      "description": "Limit sum of signature cache and script execution cache sizes to <n> MiB.",
      "default": 32,
      "min": 1
    },
    "maxtipage": {
      "name": "Max Age of Chain Tip",
      "description": "Maximum tip age in seconds to consider node in initial block download.",
      "default": 86400,
      "min": 0
    },
    "maxtxfee": {
      "name": "Max Transaction Fee",
      "shortDescription": "Maximum total fees (in BTC) to use in a single wallet transaction or raw transaction.",
      "description": "Maximum total fees (in BTC) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions.",
      "default": 0.1,
      "min": 0
    },
    "printtoconsole": {
      "name": "Output to Console",
      "description": "Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)",
      "default": 0
    },
    "printpriority": {
      "name": "Print Priority",
      "description": "Log transaction priority and fee rate in BTC/kvB when mining blocks.",
      "default": 0
    },
    "promiscuousmempoolflags": {
      "name": "Script Verification Flags",
      "description": "Integer representing the script verification flags to enable (all ORed together) - flags can be found in interpreter.h.",
      "default": ""
    },
    "shrinkdebugfile": {
      "name": "Shrink Debug Log File",
      "description": "Shrink debug.log file on client startup (default: 1 when no -debug).",
      "default": 1
    }
  },
  "relay": {
    "section": "Transaction Relay",
    "description": "Fine tune settings for what transactions your node will relay to peers.",
    "acceptnonstdtxn": {
      "name": "Accept Non-Standard Transactions",
      "description": "Relay and mine non-standard transactions.",
      "default": 0
    },
    "acceptnonstddatacarrier": {
      "name": "Accept Non-Standard Datacarrier Transactions",
      "description": "Relay and mine non-OP_RETURN datacarrier injection.",
      "knotsExclusive": true,
      "default": 0
    },
    "minrelaytxfee": {
      "name": "Min Transaction Relay Fee",
      "description": "Fee rates (in BTC/kB) smaller than this are considered zero fee for relaying, mining and transaction creation.",
      "default": 0.00001,
      "min": 0
    },
    "incrementalrelayfee": {
      "name": "Incremental Relay Fee",
      "description": "Fee rate (in BTC/kB) used to define cost of relay, used for mempool limiting and replacement policy.",
      "default": 0.00001,
      "min": 0
    },
    "dustrelayfee": {
      "name": "Dust Relay Fee",
      "description": "Fee rate (in BTC/kB) used to defined dust, the value of an output such that it will cost about 1/3 of its value in fees at this fee rate to spend it.",
      "default": 0.00003,
      "min": 0
    },
    "dustdynamic": {
      "name": "Dynamic Dust Relay Fee",
      "description": "Automatically raise dustrelayfee based on either the expected fee to be mined within <blocks> blocks, or to be within the best <kvB> kvB of this node's mempool. If unspecified, multiplier is 3000. Specify in format: off|[<multiplier>*]target:<blocks>|[<multiplier>*]mempool:<kvB>",
      "knotsExclusive": true,
      "default": "off"
    },
    "bytespersigop": {
      "name": "Bytes Per Signature Operation",
      "description": "Equivalent bytes per sigop in transactions for relay and mining.",
      "default": 20,
      "min": 1
    },
    "bytespersigopstrict": {
      "name": "Bytes Per Signature Operation Strict",
      "description": "Minimum bytes per sigop in transactions we relay and mine.",
      "knotsExclusive": true,
      "default": 20,
      "min": 1
    },
    "datacarrier": {
      "name": "Data Carrier",
      "description": "Relay and mine data carrier transactions.",
      "default": 1
    },
    "datacarriersize": {
      "name": "Data Carrier Size",
      "description": "Maximum size of data in data carrier transactions we relay and mine in bytes.",
      "default": 42,
      "min": 0
    },
    "datacarriercost": {
      "name": "Data Carrier Cost",
      "description": "Treat extra data in transactions as at least N vbytes per actual byte.",
      "knotsExclusive": true,
      "default": 1
    },
    "datacarrierfullcount": {
      "name": "Data Carrier Full Count",
      "description": "Apply datacarriersize limit to all known datacarrier methods.",
      "knotsExclusive": true,
      "default": 1
    },
    "permitbaremultisig": {
      "name": "Permit Bare Multisig",
      "description": "Relay non-P2SH multisig transactions.",
      "default": 0
    },
    "permitbarepubkey": {
      "name": "Permit Bare Pubkey",
      "description": "Relay legacy pubkey outputs.",
      "knotsExclusive": true,
      "default": 0
    },
    "rejectparasites": {
      "name": "Reject Parasites",
      "description": "Refuse to relay or mine parasitic overlay protocols.",
      "knotsExclusive": true,
      "default": 1
    },
    "rejecttokens": {
      "name": "Reject Tokens",
      "description": "Refuse to relay or mine transactions involving non-bitcoin tokens.",
      "knotsExclusive": true,
      "default": 0
    },
    "maxscriptsize": {
      "name": "Maximum Script Size",
      "description": "Maximum size of scripts we relay and mine in bytes.",
      "knotsExclusive": true,
      "default": 1650,
      "min": 0
    },
    "spkreuse": {
      "name": "Script And Public Key Reuse",
      "description": {
        "allow": "Accept transactions reusing addresses or other pubkey scripts.",
        "conflict": "Reject transactions reusing addresses or other pubkey scripts."
      },
      "values": [
        "Allow [allow]",
        "Disallow [conflict]"
      ],
      "knotsExclusive": true,
      "default": "allow"
    },
    "mempoolfullrbf": {
      "name": "Mempool Full RBF",
      "description": "Accept transaction replace-by-fee without requiring replaceability signaling.",
      "default": 1
    },
    "mempoolreplacement": {
      "name": "Mempool Replacement",
      "description": {
        "0": "Disable RBF entirely.",
        "fee,optin": "Honor RBF opt-out signal.",
        "fee,-optin": "Always RBF aka full RBF."
      },
      "values": [
        "Disable [0]",
        "Honor opt-out [fee,optin]",
        "Full RBF [fee,-optin]"
      ],
      "knotsExclusive": true,
      "default": "fee,-optin"
    },
    "whitelistrelay": {
      "name": "Whitelist Relay",
      "description": "Add 'relay' permission to whitelisted peers with default permissions. This will accept relayed transactions even when not relaying transactions.",
      "default": 1
    },
    "whitelistforcerelay": {
      "name": "Whitelist Force Relay",
      "description": "Add 'forcerelay' permission to whitelisted peers with default permissions. This will relay transactions even if the transactions were already in the mempool.",
      "default": 0
    },
    "corepolicy": {
      "name": "Bitcoin Core Policy",
      "description": "Use Bitcoin Core policy defaults.",
      "knotsExclusive": true,
      "default": 0
    }
  },
  "network": {
    "section": "Networking",
    "description": "Options for how your node interacts with other peers on the network.",
    "addnode": {
      "name": "Connect to Peer",
      "shortDescription": "Add a node IP address to connect to and attempt to keep the connection open. This option can be set multiple times.",
      "description": "Add a node IP address to connect to and attempt to keep the connection open. This option can be set multiple times to add multiple nodes. Connections are limited to 8 at a time and are counted separately from the -maxconnections limit.",
      "default": ""
    },
    "asmap": {
      "name": "ASN Mapping",
      "description": "Specify asn mapping used for bucketing of the peers. Relative paths will be prefixed by the net-specific datadir location.",
      "default": "$BASE/ip_asn.map"
    },
    "bantime": {
      "name": "Peer Ban Time",
      "description": "Default duration (in seconds) of manually configured bans.",
      "default": 86400,
      "min": 1
    },
    "bind": {
      "name": "Bind to IP Address",
      "description": "Bind to given address and always listen on it (default: 0.0.0.0). Use [host]:port notation for IPv6. Append =onion to tag any incoming connections to that address and port as incoming Tor connections. (default: 127.0.0.1:8334=onion, testnet: 127.0.0.1:18334=onion, signet: 127.0.0.1:38334=onion, regtest: 127.0.0.1:18445=onion.",
      "default": ""
    },
    "cjdnsreachable": {
      "name": "CJDNS Reachable",
      "description": "If set, then this host is configured for CJDNS (connecting to fc00::/8 addresses would lead us to the CJDNS network)",
      "default": 0
    },
    "connect": {
      "name": "Only Connect to Peer",
      "shortDescription": "Connect only to the specified node(s); can be set multiple times. -noconnect disables automatic connections.",
      "description": "Connect only to the specified node(s); can be set multiple times. -noconnect disables automatic connections (the rules for this peer are the same as for -addnode).",
      "default": ""
    },
    "discover": {
      "name": "Discover IP Address",
      "description": "Discover own IP addresses. If disabled, should be used with -externalip or -proxy.",
      "default": 1
    },
    "externalip": {
      "name": "External IP Address",
      "description": "Specify your own public IP address.",
      "default": ""
    },
    "dns": {
      "name": "Allow DNS Lookups",
      "description": "Allow DNS lookups for -addnode, -seednode and -connect values.",
      "default": 1
    },
    "dnsseed": {
      "name": "Use DNS Seed",
      "description": "Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used or -maxconnections=0).",
      "default": 1
    },
    "fixedseeds": {
      "name": "Use Fixed Seeds",
      "description": "Allow fixed seeds if DNS seeds don't provide peers.",
      "default": 1
    },
    "forcednsseed": {
      "name": "Force DNS Seed",
      "description": "Always query for peer addresses via DNS lookup.",
      "default": 0
    },
    "feefilter": {
      "name": "Fee filter",
      "description": "Tell other nodes to filter invs to us by our mempool min fee.",
      "knotsExclusive": true,
      "default": 1
    },
    "i2pacceptincoming": {
      "name": "Accept Incoming I2P Connections",
      "shortDescription": "Whether to accept inbound I2P connections. Ignored if -i2psam is not set.",
      "description": "Whether to accept inbound I2P connections. Ignored if -i2psam is not set. Listening for incoming I2P connections is done through the SAM proxy, not by binding to a local address and port.",
      "default": 1
    },
    "i2psam": {
      "name": "I2P SAM Proxy",
      "description": "I2P SAM proxy <ip:port> to reach I2P peers and accept I2P connections."
    },
    "listen": {
      "name": "Listen for Incoming Connections",
      "description": "Accept connections from outside (default: 1 if no -proxy, -connect or -maxconnection=0)",
      "default": 1
    },
    "listenonion": {
      "name": "Tor Hidden Service",
      "description": "Automatically create Tor hidden service.",
      "default": 1
    },
    "maxconnections": {
      "name": "Max Peer Connections",
      "shortDescription": "Maintain at most N connections to peers.",
      "description": "Maintain at most N connections to peers. This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of 8.",
      "default": 125,
      "min": 0,
      "max": 250
    },
    "maxreceivebuffer": {
      "name": "Max Receive Buffer",
      "description": "Maximum per-connection receive buffer (KiB).",
      "default": 5000,
      "min": 1000
    },
    "maxsendbuffer": {
      "name": "Max Send Buffer",
      "description": "Maximum per-connection send buffer (KiB).",
      "default": 1000,
      "min": 100
    },
    "maxtimeadjustment": {
      "name": "Max Time Adjustment",
      "description": "Maximum allowed median peer time offset adjustment in seconds. Local perspective of time may be influenced by outbound peers forward or backward by this amount.",
      "default": 4200,
      "min": 0
    },
    "natpmp": {
      "name": "NAT Port Mapping Protocol",
      "description": "Use NAT-PMP to map the listening port.",
      "default": 0
    },
    "networkactive": {
      "name": "Network Active",
      "description": "Enable all P2P network activity.",
      "default": 1
    },
    "onion": {
      "name": "Tor Proxy",
      "description": "Use separate SOCKS5 proxy <ip:port> to reach peers via Tor hidden services. Set -noonion to disable.",
      "default": ""
    },
    "onlynet": {
      "name": "Only Use Specific Network",
      "description": {
        "any": "Use every available network",
        "ipv4": "Only connect to peers via IPV4",
        "ipv6": "Only connect to peers via IPV6",
        "onion": "Only connect to peers via Tor",
        "i2p": "Only connect to peers via I2P",
        "cjdns": "Only connect to peers via CJDNS"
      },
      "values": [
        "Any [any]",
        "IPV4 [ipv4]",
        "IPV6 [ipv6]",
        "Tor [onion]",
        "I2P [i2p]",
        "CJDNS [cjdns]"
      ],
      "default": "any"
    },
    "v2transport": {
      "name": "v2 Transport",
      "description": "Support v2 transport.",
      "default": 1
    },
    "peerblockfilters": {
      "name": "Permit Peer Block Filters",
      "description": "Serve compact block filters to peers per BIP 157. NOTE: enabling this will force blockfilterindex on",
      "default": 0
    },
    "peerbloomfilters": {
      "name": "Permit Peer Bloom Filters",
      "description": "Support filtering of blocks and transactions with bloom filters.",
      "default": 1
    },
    "peertimeout": {
      "name": "Peer Timeout",
      "description": "Specify p2p connection timeout in seconds. After connecting to a peer, wait this amount of time before considering disconnection based on inactivity.",
      "default": 60,
      "min": 1
    },
    "port": {
      "name": "Listen Port",
      "shortDescription": "Listen for incoming connections on non-default port. Defaults: (default: 8333, testnet: 18333, signet: 38333, regtest: 18444). Not relevant for I2P.",
      "description": "Listen for incoming connections on non-default port. Nodes not using the default ports (default: 8333, testnet: 18333, signet: 38333, regtest: 18444) are unlikely to get incoming connections. Not relevant for I2P.",
      "default": ""
    },
    "proxy": {
      "name": "Proxy Connection",
      "description": "Connect through <ip:port> SOCKS5 proxy, set -noproxy to disable.",
      "default": "noproxy"
    },
    "proxyrandomize": {
      "name": "Randomize Proxy",
      "description": "Randomize credentials for every proxy connection. This enables Tor stream isolation.",
      "default": 1
    },
    "seednode": {
      "name": "Seed Node",
      "description": "Connect to a node (IP address) to retrieve peer addresses, then disconnect. This option can be specified multiple times to connect to multiple nodes.",
      "default": ""
    },
    "timeout": {
      "name": "Connection Timeout",
      "description": "Initial peer connection timeout in milliseconds. If an initial attempt to connect is unsuccessful after this amount of time, drop it.",
      "default": 5000,
      "min": 1
    },
    "torcontrol": {
      "name": "Tor Control",
      "description": "Tor control <ip:port> to use if onion listening enabled. If no port is specified, the default port of 9051 will be used.",
      "default": "127.0.0.1:9051"
    },
    "torexecute": {
      "name": "Tor Control",
      "description": "Tor command to use if not already running.",
      "knotsExclusive": true,
      "default": "tor"
    },
    "torpassword": {
      "name": "Tor Control Password",
      "description": "Tor control port password.",
      "default": ""
    },
    "txreconciliation": {
      "name": "Transaction Reconciliation",
      "description": "Enable transaction reconciliations per BIP 330.",
      "default": 0
    },
    "uaappend": {
      "name": "User Agent Append",
      "description": "Append literal to the user agent string (should only be used for software embedding).",
      "knotsExclusive": true,
      "default": ""
    },
    "upnp": {
      "name": "Universal Plug 'n Play",
      "description": "Use UPnP to map the listening port.",
      "default": 0
    },
    "whitebind": {
      "name": "Whitelist Bound IP Address",
      "shortDescription": "Bind to the given address and add permission flags <[permissions@]addr> to the peers connecting to it. Use [host]:port notation for IPv6. Allowed permissions: bloomfilter, blockfilters, noban, forcerelay, relay, mempool, download, addr, forceinbound. Specify multiple permissions separated by commas (default: download,noban,mempool,relay). Can be specified multiple times.",
      "description": "Bind to the given address and add permission flags <[permissions@]addr> to the peers connecting to it. Use [host]:port notation for IPv6. Allowed permissions: bloomfilter (allow requesting BIP37 filtered blocks and transactions), blockfilters (serve compact block filters to peers per BIP157), noban (do not ban for misbehavior; implies download), forcerelay (relay transactions that are already in the mempool; implies relay), relay (relay even in -blocksonly mode, and unlimited transaction announcements), mempool (allow requesting BIP35 mempool contents), download (allow getheaders during IBD, no disconnect after maxuploadtarget limit), addr (responses to GETADDR avoid hitting the cache and contain random records with the most up-to-date info), forceinbound (when connections are full, attempt to evict a random unprotected inbound peer to open a slot; implies noban). Specify multiple permissions separated by commas (default: download,noban,mempool,relay). Can be specified multiple times.",
      "default": ""
    },
    "whitelist": {
      "name": "Whitelist Peer",
      "description": "Add permission flags <[permissions@]IP address or network> to the peers using the given IP address (e.g. 1.2.3.4) or CIDR-notated network (e.g. 1.2.3.0/24). Uses the same permissions as -whitebind. Additional flags \"in\" and \"out\" control whether permissions apply to incoming connections and/or outgoing (default: incoming only). Can be specified multiple times.",
      "default": ""
    },
    "maxuploadtarget": {
      "name": "Max Upload Target",
      "shortDescription": "Tries to keep outbound traffic under the given target (in MiB per 24h). 0 = no limit.",
      "description": "Tries to keep outbound traffic under the given target (in MiB per 24h). Limit does not apply to peers with 'download' permission or blocks created within past week. 0 = no limit (default: 0M). Optional suffix units [k|K|m|M|g|G|t|T] (default: M). Lowercase is 1000 base while uppercase is 1024 base.",
      "default": "0M"
    }
  },
  "mining": {
    "section": "Mining",
    "description": "Configure attributes of blocks that can be mined by this node.",
    "blockmaxsize": {
      "name": "Max Block Size",
      "description": "Set maximum block size in bytes.",
      "knotsExclusive": true,
      "default": 3000000,
      "min": 0
    },
    "blockmaxweight": {
      "name": "Max Block Weight",
      "description": "Set maximum BIP141 block weight.",
      "default": 1200000
    },
    "blockmintxfee": {
      "name": "Block Min Transaction Fee",
      "description": "Set lowest fee rate (in BTC/kB) for transactions to be included in block creation.",
      "default": 0.00001,
      "min": 0
    },
    "blockprioritysize": {
      "name": "Block Priority Size",
      "description": "Set maximum size of high-priority/low-fee transactions in bytes.",
      "knotsExclusive": true,
      "default": 100000,
      "min": 0
    },
    "blockversion": {
      "name": "Block Version",
      "description": "Override block version to test forking scenarios.",
      "default": ""
    }
  },
  "rpc": {
    "section": "RPC API",
    "description": "Configure security and performance options for accessing the node's RPC interface.",
    "deprecatedrpc": {
      "name": "Enable Deprecated RPC Commands",
      "description": {
        "accounts": "Enable Accounts RPC",
        "addwitnessaddress": "Enable Add Witness Address RPC",
        "signrawtransaction": "Enable Sign Raw Transaction RPC",
        "validateaddress": "Enable Validate Address RPC"
      },
      "values": [
        "Accounts [accounts]",
        "Add Witness Address [addwitnessaddress]",
        "Sign Raw Transaction [signrawtransaction]",
        "Validate Address [validateaddress]"
      ],
      "default": []
    },
    "server": {
      "name": "Enable RPC Server",
      "description": "Accept command line and JSON-RPC commands.",
      "default": 0
    },
    "rest": {
      "name": "Enable REST API",
      "description": "Accept public REST requests.",
      "default": 0
    },
    "rpcbind": {
      "name": "Bind RPC Address",
      "shortDescription": "Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times. (default: 127.0.0.1 and ::1 i.e., localhost)",
      "description": "Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times. (default: 127.0.0.1 and ::1 i.e., localhost)",
      "default": ""
    },
    "rpcdoccheck": {
      "name": "RPC Documentation Check",
      "description": "Throw a non-fatal error at runtime if the documentation for an RPC is incorrect.",
      "default": 0
    },
    "rpccookiefile": {
      "name": "RPC Cookie Directory",
      "description": "Location of the RPC auth cookie. Relative paths will be prefixed by a net-specific datadir location.",
      "default": "$BASE"
    },
    "rpccookieperms": {
      "name": "RPC Cookie Permissions",
      "description": "Set the permissions on the RPC auth cookie file to the specified octal value.",
      "knotsExclusive": true,
      "default": "600"
    },
    "rpcauth": {
      "name": "RPC Auth",
      "shortDescription": "Username and HMAC-SHA-256 hashed password for JSON-RPC connections, to be provided in the format: <USERNAME>:<SALT>$<HASH>. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. Can be specified multiple times.",
      "description": "Username and HMAC-SHA-256 hashed password for JSON-RPC connections, to be provided in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcauth. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. You can generate this value at https://jlopp.github.io/bitcoin-core-rpc-auth-generator/. This option can be specified multiple times.",
      "default": ""
    },
    "rpcuser": {
      "name": "RPC User",
      "description": "Username for JSON-RPC connections.",
      "default": ""
    },
    "rpcpassword": {
      "name": "RPC Password",
      "description": "Password for JSON-RPC connections.",
      "default": ""
    },
    "rpcauthfile": {
      "name": "RPC Auth File",
      "description": "A file with a single line with the same format as rpcauth. This option can be specified multiple times.",
      "knotsExclusive": true,
      "default": ""
    },
    "rpcport": {
      "name": "RPC Port",
      "description": "Listen for JSON-RPC connections on this port (default: 8332, testnet: 18332, signet: 38332, regtest: 18443).",
      "default": 8332
    },
    "rpcallowip": {
      "name": "RPC Allow IP Address",
      "description": "Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) a network/CIDR (e.g. 1.2.3.4/24), all ipv4 (0.0.0.0/0), or all ipv6 (::/0).. This option can be specified multiple times.",
      "default": ""
    },
    "rpcwhitelistdefault": {
      "name": "RPC Whitelist Default",
      "description": "Sets default behavior for rpc whitelisting. Unless set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.",
      "default": 0
    },
    "rpcwhitelist": {
      "name": "RPC Whitelist",
      "shortDescription": "Set a whitelist to filter incoming RPC calls for a specific user. The field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc 2>,...,<rpc n>. If multiple whitelists are set for a given user, they are set-intersected.",
      "description": "Set a whitelist to filter incoming RPC calls for a specific user. The field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc 2>,...,<rpc n>. If multiple whitelists are set for a given user, they are set-intersected. See -rpcwhitelistdefault documentation for information on default whitelist behavior.",
      "default": ""
    },
    "rpcthreads": {
      "name": "RPC Threads",
      "description": "Set the number of threads to service RPC calls",
      "default": 4,
      "min": 1
    },
    "rpcworkqueue": {
      "name": "RPC Work Queue Size",
      "description": "Set the depth of the work queue to service RPC calls",
      "default": 16,
      "min": 1
    },
    "rpcserialversion": {
      "name": "RPC Serialization",
      "description": {
        "0": "Return raw transaction or block hex with non-SegWit serialization.",
        "1": "Return raw transaction or block hex with SegWit serialization."
      },
      "values": [
        "Non-SegWit (DEPRECATED) [0]",
        "SegWit [1]"
      ],
      "default": "1"
    },
    "rpcservertimeout": {
      "name": "RPC Timeout",
      "description": "Number of seconds after which an uncompleted RPC call will time out",
      "default": 30,
      "min": 1
    }
  },
  "wallet": {
    "section": "Wallet",
    "description": "Configure behavior of the node's wallet.",
    "addresstype": {
      "name": "Address Type",
      "description": {
        "legacy": "Legacy",
        "p2sh-segwit": "P2SH Wrapped SegWit",
        "bech32": "Bech32",
        "bech32m": "Bech32 modified"
      },
      "values": [
        "Legacy [legacy]",
        "P2SH Wrapped SegWit [p2sh-segwit]",
        "Bech32 [bech32]",
        "Bech32m [bech32m]"
      ],
      "default": "bech32"
    },
    "avoidpartialspends": {
      "name": "Avoid Partial Spends",
      "shortDescription": "Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Improves privacy at expense of higher transaction fees.",
      "description": "Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. It may result in higher fees due to less optimal coin selection caused by this added limitation and possibly a larger-than-necessary number of inputs being used. Always enabled for wallets with \"avoid_reuse\" enabled, otherwise.",
      "default": 0
    },
    "changetype": {
      "name": "Change Address Type",
      "description": {
        "legacy": "Legacy",
        "p2sh-segwit": "P2SH Wrapped SegWit",
        "bech32": "Bech32",
        "bech32m": "Bech32 modified"
      },
      "values": [
        "Legacy [legacy]",
        "P2SH Wrapped SegWit [p2sh-segwit]",
        "Bech32 [bech32]",
        "Bech32m [bech32m]"
      ],
      "default": "bech32"
    },
    "consolidatefeerate": {
      "name": "Consolidate Fee Rate",
      "description": "The maximum feerate (in BTC/kvB) at which transaction building may use more inputs than strictly necessary so that the wallet's UTXO pool can be reduced",
      "default": 0.0001,
      "min": 0.00001
    },
    "disablewallet": {
      "name": "Disable Wallet",
      "description": "Do not load the wallet and disable wallet RPC calls.",
      "default": 0
    },
    "keypool": {
      "name": "Key Pool Size",
      "shortDescription": "Set key pool size to <n>.",
      "description": "Set key pool size to <n>. Warning: Smaller sizes may increase the risk of losing funds when restoring from an old backup, if none of the addresses in the original keypool have been used.",
      "default": 1000,
      "min": 10
    },
    "fallbackfee": {
      "name": "Fallback Transaction Fee",
      "description": "A fee rate (in BTC/kB) that will be used when fee estimation has insufficient data. 0 to entirely disable the fallbackfee feature.",
      "default": 0.00
    },
    "discardfee": {
      "name": "Discard Change Fee",
      "description": "The fee rate (in BTC/kB) that indicates your tolerance for discarding change by adding it to the fee.",
      "default": 0.0001,
      "min": 0
    },
    "maxapsfee": {
      "name": "Max Avoid Partial Spend Fee",
      "description": "Spend up to this amount in additional (absolute) fees (in BTC) if it allows the use of partial spend avoidance.",
      "default": 0.00,
      "min": 0
    },
    "mintxfee": {
      "name": "Min Transaction Fee",
      "description": "Fee rates (in BTC/kB) smaller than this are considered zero fee for transaction creation.",
      "default": 0.00001,
      "min": 0
    },
    "paytxfee": {
      "name": "Pay Transaction Fee",
      "shortDescription": "Fee rate (in BTC/kB) to add to transactions you send.",
      "description": "Fee rate (in BTC/kB) to add to transactions you send. Not recommended to set!",
      "default": 0
    },
    "signer": {
      "name": "Signer Command",
      "description": "External signing tool, see doc/external-signer.md"
    },
    "spendzeroconfchange": {
      "name": "Spend Unconfirmed Change",
      "description": "Spend unconfirmed change when sending transactions.",
      "default": 1
    },
    "rootcertificates": {
      "name": "Root Certificate file",
      "description": "Specify a custom root certificate to trust for payment requests. Delete value to disable trusting root certificates.",
      "default": "-system-"
    },
    "txconfirmtarget": {
      "name": "Transaction Fee Confirmation Target",
      "description": "If paytxfee is not set, include enough fee so that transactions begin confirmation on average within <n> blocks",
      "default": 144,
      "min": 2
    },
    "unsafesqlitesync": {
      "name": "Unsafe SQL Lite Sync",
      "shortDescription": "Set SQLite synchronous=OFF to disable waiting for the database to sync to disk.",
      "description": "Set SQLite synchronous=OFF to disable waiting for the database to sync to disk. This is unsafe and can cause data loss and corruption. This option is only used by tests to improve their performance.",
      "default": 0
    },
    "walletrbf": {
      "name": "Enable Replace By Fee Transactions",
      "description": "Send transactions with full-RBF opt-in enabled (RPC only).",
      "default": 1
    },
    "wallet": {
      "name": "Wallet Path",
      "shortDescription": "Specify wallet path to load at startup. Can be used multiple times to load multiple wallets. If the path is not absolute, it is interpreted relative to <walletdir>.",
      "description": "Specify wallet path to load at startup. Can be used multiple times to load multiple wallets. Path is to a directory containing wallet data and log files. If the path is not absolute, it is interpreted relative to <walletdir>. This only loads existing wallets and does not create new ones. For backwards compatibility this also accepts names of existing top-level data files in <walletdir>.",
      "default": ""
    },
    "walletdir": {
      "name": "Wallet Data Storage Location",
      "description": "Specify directory to hold wallets.",
      "default": "$BASE/wallets"
    },
    "walletimplicitsegwit": {
      "name": "Wallet Implicit Segwit",
      "description": "Support segwit when restoring wallet backups and importing keys.",
      "knotsExclusive": true,
      "default": 0
    },
    "walletbroadcast": {
      "name": "Wallet Transaction Broadcast",
      "description": "Make the wallet broadcast transactions.",
      "default": 1
    },
    "walletnotify": {
      "name": "Wallet Notification",
      "shortDescription": "Execute command when a wallet transaction changes. Replacements: %s = TxID, %w = wallet name, %b = hash of the block including the transaction (set to 'unconfirmed' if the transaction is not included), %h = block height (-1 if not included).",
      "description": "Execute command when a wallet transaction changes. %s in cmd is replaced by TxID, %w is replaced by wallet name, %b is replaced by the hash of the block including the transaction (set to 'unconfirmed' if the transaction is not included) and %h is replaced by the block height (-1 if not included). %w should NOT be quoted because this would break shell escaping used to invoke the command.",
      "default": ""
    },
    "dblogsize": {
      "name": "DB Log Size",
      "description": "Flush wallet database activity from memory to disk log every <n> megabytes",
      "default": 100
    },
    "flushwallet": {
      "name": "Flush Wallet Automatically",
      "description": "Run a thread to flush wallet periodically.",
      "default": 1
    },
    "privdb": {
      "name": "Private DB",
      "description": "Set the DB_PRIVATE flag in the wallet db environment.",
      "default": 1
    },
    "walletrejectlongchains": {
      "name": "Reject Long Transaction Chains",
      "description": "Wallet will not create transactions that violate mempool chain limits.",
      "default": 1
    },
    "walletcrosschain": {
      "name": "Wallet Cross Chain",
      "description": "Allow reusing wallet files across chains.",
      "default": 0
    }
  },
  "zeromq": {
    "section": "ZeroMQ",
    "description": "Options for handling notifications emitted via ZeroMQ.",
    "zmqpubhashblock": {
      "name": "Publish Block Hashes",
      "description": "Enable publishing of block hashes to <address>.",
      "default": ""
    },
    "zmqpubhashtx": {
      "name": "Publish Transaction Hashes",
      "description": "Enable publishing of transaction hashes to <address>.",
      "default": ""
    },
    "zmqpubhashwallettx": {
      "name": "Publish Wallet Transaction Hashes",
      "description": "Enable publishing of wallet transaction hashes to <address>.",
      "knotsExclusive": true,
      "default": ""
    },
    "zmqpubrawblock": {
      "name": "Publish Raw Blocks",
      "description": "Enable publishing of raw block hex to <address>.",
      "default": ""
    },
    "zmqpubrawtx": {
      "name": "Publish Raw Transactions",
      "description": "Enable publishing of raw transaction hex to <address>.",
      "default": ""
    },
    "zmqpubrawwallettx": {
      "name": "Publish Raw Wallet Transaction",
      "description": "Enable publishing of raw wallet transaction hex to <address>.",
      "knotsExclusive": true,
      "default": ""
    },
    "zmqpubsequence": {
      "name": "Publish Hash Block and Transaction Sequence",
      "description": "Enable publish hash block and tx sequence in <address>.",
      "default": ""
    },
    "zmqpubhashblockhwm": {
      "name": "Publish Block Hashes High Water Mark",
      "description": "Set publish hash block outbound message high water mark.",
      "default": 1000
    },
    "zmqpubhashtxhwm": {
      "name": "Publish Transaction Hashes High Water Mark",
      "description": "Set publish hash transaction outbound message high water mark.",
      "default": 1000
    },
    "zmqpubhashwallettxhwm": {
      "name": "Publish Wallet Transaction Hashes High Water Mark",
      "description": "Set publish hash wallet transaction outbound message high water mark.",
      "knotsExclusive": true,
      "default": 1000
    },
    "zmqpubrawblockhwm": {
      "name": "Publish Raw Blocks High Water Mark",
      "description": "Set publish raw block outbound message high water mark.",
      "default": 1000
    },
    "zmqpubrawtxhwm": {
      "name": "Publish Raw Transactions High Water Mark",
      "description": "Set publish raw transaction outbound message high water mark.",
      "default": 1000
    },
    "zmqpubrawwallettxhwm": {
      "name": "Publish Raw Wallet Transactions High Water Mark",
      "description": "Set publish raw wallet transaction outbound message high water mark.",
      "knotsExclusive": true,
      "default": 1000
    },
    "zmqpubsequencehwm": {
      "name": "Publish Hash Sequence Message High Water Mark",
      "description": "Set publish hash sequence message high water mark.",
      "default": 1000
    }
  },
  "stats": {
    "section": "Statistics",
    "description": "Options for collecting statistics.",
    "knotsExclusive": true,
    "statsenable": {
      "name": "Enable statistics",
      "description": "Enable statistics.",
      "knotsExclusive": true,
      "default": 0
    },
    "statsmaxmemorytarget": {
      "name": "Statistics Maximum Memory Target",
      "description": "Set the memory limit target for statistics in bytes.",
      "knotsExclusive": true,
      "default": 10485760
    }
  }
}
